// <auto-generated />
using System;
using AddressBook.Api.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AddressBook.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250318170412_Seeding")]
    partial class Seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AddressBook.Web.Domain.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Doe",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1992, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            LastName = "Smith",
                            OwnerId = 1
                        });
                });

            modelBuilder.Entity("AddressBook.Web.Domain.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("PhoneOperatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("PhoneOperatorId");

                    b.ToTable("Phones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "John's Phone 1",
                            ContactId = 1,
                            PhoneNumber = "1234567890",
                            PhoneOperatorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comment = "John's Phone 2",
                            ContactId = 1,
                            PhoneNumber = "0987654321",
                            PhoneOperatorId = 2
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Jane's Phone 1",
                            ContactId = 2,
                            PhoneNumber = "1112223333",
                            PhoneOperatorId = 1
                        },
                        new
                        {
                            Id = 4,
                            Comment = "Jane's Phone 2",
                            ContactId = 2,
                            PhoneNumber = "4445556666",
                            PhoneOperatorId = 2
                        });
                });

            modelBuilder.Entity("AddressBook.Web.Domain.PhoneOperator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("PhoneOperators");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Mobile operator Vodafone in Ukraine",
                            Name = "Vodafone UA"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Mobile operator Kyivstar in Ukraine",
                            Name = "Kyivstar UA"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Mobile operator Super in Estonia",
                            Name = "Super EE"
                        });
                });

            modelBuilder.Entity("AddressBook.Web.Domain.Phone", b =>
                {
                    b.HasOne("AddressBook.Web.Domain.Contact", "Contact")
                        .WithMany("Phones")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AddressBook.Web.Domain.PhoneOperator", "PhoneOperator")
                        .WithMany("Phones")
                        .HasForeignKey("PhoneOperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("PhoneOperator");
                });

            modelBuilder.Entity("AddressBook.Web.Domain.Contact", b =>
                {
                    b.Navigation("Phones");
                });

            modelBuilder.Entity("AddressBook.Web.Domain.PhoneOperator", b =>
                {
                    b.Navigation("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
